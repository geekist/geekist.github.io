I"&"<p>GitHub 前不久发布了 New Features 公告，<a href="https://github.com/blog/2100-github-pages-now-faster-and-simpler-with-jekyll-3-0">GitHub Pages now faster and simpler with Jekyll 3.0</a>，宣布从 2016 年 5 月 1 日起，GitHub Pages 将只支持 kramdown 作为唯一的 Markdown 引擎。</p>

<p>这其实也算得一件好事，之前支持 Rediscount、Redcarpet 和 kramdown 等多种引擎，而它们相互之间和与标准 Markdown 之间又有一些细微却也无法忽视的差异，这让需要在多个平台使用 Markdown 的我头疼不已，早就希望 GitHub Pages 能与 GitHub 的 Issues 和 comments 等地方统一语法，本次更新虽然做不到这一点，但也算是迈出了不小的一步。</p>

<p>我在此前是使用 Redcarpet，配置如下：</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">markdown</span><span class="pi">:</span> <span class="s">redcarpet</span>
<span class="na">redcarpet</span><span class="pi">:</span> 
    <span class="na">extensions</span><span class="pi">:</span> 
        <span class="pi">-</span> <span class="s">no_intra_emphasis</span>
        <span class="pi">-</span> <span class="s">fenced_code_blocks</span>
        <span class="pi">-</span> <span class="s">autolink</span>
        <span class="pi">-</span> <span class="s">tables</span>
        <span class="pi">-</span> <span class="s">with_toc_data</span>
        <span class="pi">-</span> <span class="s">strikethrough</span>

<span class="na">pygments</span><span class="pi">:</span> <span class="no">true</span>
</code></pre></div></div>

<p>切换到 kramdown 之后的配置如下：</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">markdown</span><span class="pi">:</span> <span class="s">kramdown</span>
<span class="na">kramdown</span><span class="pi">:</span>
    <span class="na">input</span><span class="pi">:</span> <span class="s">GFM</span>
<span class="na">highlighter</span><span class="pi">:</span> <span class="s">rouge</span>
</code></pre></div></div>

<p>切换过程中有若干需要处理的差异问题，现将它们及解决方法记录如下。</p>

<h2 id="列表项里嵌套的代码块">列表项里嵌套的代码块</h2>

<p>嵌套在列表项中的代码块在 Redcarpet 中使用 Tab 进行缩进即可，而在 kramdown 中需要根据列表项的内容开始位置决定缩进的字符数。</p>

<p>关于此问题的讨论见 <a href="https://github.com/gettalong/kramdown/issues/209">Embedding codeblocks in lists</a>。</p>

<p>in Redcarpet:</p>

<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">1.</span> list item one<span class="sb">

    ```python
    print 'hello, world'
    ```

</span><span class="p">2.</span> list item two<span class="sb">


</span><span class="p">*</span> unordered list item one<span class="sb">

    ```python
    print 'hello, world'
    ```

</span><span class="p">*</span> unordered list item two
</code></pre></div></div>

<p>in kramdown:</p>

<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">1.</span> list item one

   <span class="p">```</span><span class="nl">python
</span>   <span class="k">print</span> <span class="s">'hello, world'</span>
</code></pre></div></div>

<ol>
  <li>list item two</li>
</ol>

<ul>
  <li>
    <p>unordered list item one</p>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">print</span> <span class="s">'hello, world'</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p>unordered list item two
```</p>
  </li>
</ul>

<h2 id="遍历-collections">遍历 Collections</h2>

<p>我在本博客做了一个 wiki collection，在 Redcarpet 中用 <code class="language-plaintext highlighter-rouge">for doc in site.documents</code> 可遍历所有 wiki。</p>

<p>而切换到 kramdown 后这样的写法将遍历所有的 wiki 和 posts，需要使用 <code class="language-plaintext highlighter-rouge">for wiki in site.wiki</code> 来遍历 wiki。</p>

<p>不过这点其实严格说起来应该是我在使用 Redcarpet 时的写法没有遵循 Jekyll 的文档，参考 <a href="http://jekyllrb.com/docs/collections/">Collections</a>。</p>

<h2 id="toc-链接">TOC 链接</h2>

<p>在我之前的一篇文章 <a href="https://mazhuang.org/2015/12/05/diff-between-gfm-and-redcarpet/#section-1">GFM 与 Redcarpet 的不同点</a> 中，描述了 Redcarpet 与 GFM 自动生成的 TOC 链接的区别，而 kramdown 即使启用了 <code class="language-plaintext highlighter-rouge">input: GFM</code> 生成的链接与 GFM 也还是不同，处理 GFM 与 Redcarpet 生成的 TOC 链接的区别已经让我心累了，不想再多记一种。</p>

<p>不过谢天谢地，kramdown 支持自动生成 TOC，只需在想放置 TOC 的地方放置如下内容即可，非常方便。</p>

<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">*</span> TOC
{:toc}
</code></pre></div></div>

<h2 id="删除线">删除线</h2>

<p>在 Redcarpet 中使用如下语法能自动为文字加上删除线：</p>

<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code>~~hello world~~
</code></pre></div></div>

<p>但切换到 kramdown 后这种写法失效了，浏览了一下文档之后并没有找到 kramdown 对应的语法，这个用得也少，遂直接用 HTML 元素解决问题：</p>

<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;del&gt;</span>hello world<span class="nt">&lt;/del&gt;</span>
</code></pre></div></div>

<p><del>hello world</del></p>

<p><strong>update 2016/03/02:</strong> kramdown 主分支已经解决了这个问题，见 <a href="https://github.com/gettalong/kramdown/issues/304">gettalong/kramdown#304</a>，坐等 Release 后 GitHub Pages 更新就能用了。</p>

<p><strong>update 2016/03/29:</strong> <a href="https://github.com/github/pages-gem">pages-gem</a> 当前使用的 1.10.0 版本的 kramdown 已经包含了主分支对此的修复，已经可以愉快地使用 <code class="language-plaintext highlighter-rouge">~~hello world~~</code> 来表示 <del>hello world</del> 了。</p>

<h2 id="表格">表格</h2>

<p>在 Redcarpet 中如下写法能直接显示你写的内容：</p>

<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code>READ|WRITE|SHARE
</code></pre></div></div>

<p>但在 kramdown 中会解析成表格：</p>

<table>
  <tbody>
    <tr>
      <td>READ</td>
      <td>WRITE</td>
      <td>SHARE</td>
    </tr>
  </tbody>
</table>

<p>所以需要将 <code class="language-plaintext highlighter-rouge">|</code> 转义。</p>

<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code>READ<span class="se">\|</span>WRITE<span class="se">\|</span>SHARE
</code></pre></div></div>

<p>相关讨论见：<a href="https://github.com/gettalong/kramdown/issues/151">gettalong/kramdown#151</a></p>

<h2 id="高亮的语言名称">高亮的语言名称</h2>

<p>使用 Redcarpet + pygments 的组合时，<code class="language-plaintext highlighter-rouge">cpp</code>、<code class="language-plaintext highlighter-rouge">C++</code> 和 <code class="language-plaintext highlighter-rouge">c++</code> 都能对 C++ 代码片断进行语法高亮。</p>

<p>而改为 kramdown + rouge 的组合后，只能使用 <code class="language-plaintext highlighter-rouge">cpp</code>。</p>

<p>rouge 支持的语言列表可以参考如下链接：</p>

<ul>
  <li><a href="https://github.com/jneen/rouge/wiki/List-of-supported-languages-and-lexers">List of supported languages and lexers</a></li>
</ul>

<h2 id="图片上面空行">图片上面空行</h2>

<p>在 Redcarpet 中，如下写法的图片和文字之间会换行：</p>

<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Hello, world!
<span class="p">![](</span><span class="sx">/img.png</span><span class="p">)</span>
</code></pre></div></div>

<p>而 kramdown 中这种写法图片会直接接在文字后面显示，不换行。如果需要换行则应在图片上面空一行：</p>

<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Hello, world!

<span class="p">![](</span><span class="sx">/img.png</span><span class="p">)</span>
</code></pre></div></div>

:ET