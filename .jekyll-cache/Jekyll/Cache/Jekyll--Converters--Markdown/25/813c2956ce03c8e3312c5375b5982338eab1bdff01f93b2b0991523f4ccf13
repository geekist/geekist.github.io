I"S<h3 id="需求">需求</h3>

<p>对 Fiddler 抓取的某个特定 SESSION 能在必要时手动操作发往另一个服务器。</p>

<h3 id="设想">设想</h3>

<p>在 SESSION 上点击右键弹出的菜单中添加一项，让它对应的响应事件来完成此操作。而联想到 Fiddler 的 Composer 功能能够将某条 SESSION 按自己的需要修改后重新发出，那利用 Composer 来做应该是比较容易实现且便捷的方式。</p>

<h3 id="实现">实现</h3>

<p>对 Fiddler 的扩展比较方便的是使用 FiddlerScript，修改 CustomRules.js 来做。比如希望在 hostname 为<code class="language-plaintext highlighter-rouge">www.mazhuang.org</code>的 SESSION 上右键后利用自己添加的菜单项将此 SESSION 的 hostname 修改为<code class="language-plaintext highlighter-rouge">mazhuang.org</code>后重新发送请求，最终在 CustomRules.js 文件中添加了如下代码即可。</p>

<p>添加方法：</p>

<p><strong>启动 Fiddler &gt; 选择菜单 Rules &gt; 选择菜单项 Customize Rules… &gt; 将如下代码粘贴在<code class="language-plaintext highlighter-rouge">OnDetach</code>函数后面 &gt; 保存</strong></p>

<p><em>注：发现将下面的函数放在<code class="language-plaintext highlighter-rouge">OnDetach</code>函数前自己添加的菜单项就不是第一项，而放在<code class="language-plaintext highlighter-rouge">OnDetach</code>后就是第一项了，这个很奇怪，未想到合理原因。</em></p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kr">public</span> <span class="kd">static</span> <span class="nx">ContextAction</span><span class="p">(</span><span class="dl">"</span><span class="s2">发送到 mazhuang.org</span><span class="dl">"</span><span class="p">)</span>
<span class="kd">function</span> <span class="nx">DoSend2RootDomain</span><span class="p">(</span><span class="nx">oSessions</span><span class="p">:</span> <span class="nx">Fiddler</span><span class="p">.</span><span class="nx">Session</span><span class="p">[]){</span>
    <span class="kd">var</span> <span class="nx">oS</span><span class="p">:</span> <span class="nx">Session</span> <span class="o">=</span> <span class="nx">FiddlerApplication</span><span class="p">.</span><span class="nx">UI</span><span class="p">.</span><span class="nx">GetFirstSelectedSession</span><span class="p">();</span>
    <span class="k">if</span> <span class="p">(</span><span class="kc">null</span> <span class="o">==</span> <span class="nx">oS</span><span class="p">)</span> <span class="k">return</span><span class="p">;</span>
    <span class="k">if</span> <span class="p">(</span><span class="nx">oS</span><span class="p">.</span><span class="nx">HostnameIs</span><span class="p">(</span><span class="dl">"</span><span class="s2">www.mazhuang.org</span><span class="dl">"</span><span class="p">))</span>
    <span class="p">{</span>
        <span class="nx">oS</span><span class="p">.</span><span class="nx">hostname</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">mazhuang.org</span><span class="dl">"</span><span class="p">;</span>
        <span class="nx">FiddlerApplication</span><span class="p">.</span><span class="nx">DoComposeByCloning</span><span class="p">(</span><span class="nx">oS</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="k">else</span>
    <span class="p">{</span>
        <span class="nx">MessageBox</span><span class="p">.</span><span class="nx">Show</span><span class="p">(</span><span class="dl">"</span><span class="s2">不是发往 www.mazhuang.org 的请求</span><span class="dl">"</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p>然后就能看到效果了，在 hostname 为<code class="language-plaintext highlighter-rouge">www.mazhuang.org</code>的 SESSION 上右键，点击刚刚我们自己添加的「发送到 mazhuang.org」菜单项，会发现 Fiddler 界面右边的 Composer 标签已打开，然后 hostname 已经替换为<code class="language-plaintext highlighter-rouge">mazhuang.org</code>，这时再手动点击 Execute 按钮即可将更改 hostname 后的请求重新发出。</p>

<h3 id="缺陷">缺陷</h3>

<p>当前做法有如下缺陷，尚未想到好办法解决：</p>

<ol>
  <li>会破坏原 SESSION，即将原 SESSION 的 hostname 也替换为了<code class="language-plaintext highlighter-rouge">mazhuang.org</code>。</li>
  <li>一次操作需要点选右键菜单项后再点击一次 Composer 窗口中的 Execute 按钮才能完成，比较理想的状况是点选右键菜单后即完成替换 hostname 且重新发出请求。</li>
</ol>

<h3 id="附注">附注</h3>

<p>我使用的完整最新的 CustomRules.js 文件我上传到了一个 Gist 里，详见：<a href="https://gist.github.com/mzlogin/3c5f9781c5bedff3fcfb">https://gist.github.com/mzlogin/3c5f9781c5bedff3fcfb</a>，如果想直接使用可以复制脚本内容后放置到「我的文档 /Fiddler 2/Scripts/CustomRules.js」，也可以在此目录下使用 git 抓取我的最新定制 js 文件。</p>
:ET