I"Q<h2 id="文件操作">文件操作</h2>

<h3 id="引用打开的工作簿">引用打开的工作簿</h3>

<p>使用索引号（从 1 开始）</p>

<pre><code class="language-vbnet">Workbooks(1)
</code></pre>

<p>使用工作簿名称</p>

<pre><code class="language-vbnet">Workbooks("1.xlsx")
</code></pre>

<h3 id="创建一个-excel-工作簿对象">创建一个 EXCEL 工作簿对象</h3>

<pre><code class="language-vbnet">Dim wd As Excel.Application
Dim wb As Workbook

Set wd = CreateObject("excel.application")
wd.Visible = True
Set wb = wd.Workbooks.Open(ThisWorkbook.Path &amp; "/test.xls")

' ...

wb.Close
wd.Quit
</code></pre>

<h3 id="打开保存关闭工作簿">打开/保存/关闭工作簿</h3>

<pre><code class="language-vbnet">Dim wb As Workbook

wb = Workbooks.Open(ThisWorkbook.Path &amp; "/test.xls")

' ...

wb.Save
wb.Close
</code></pre>

<p>关闭所有工作簿</p>

<pre><code class="language-vbnet">Workbooks.close
</code></pre>

<p>另存为（自动打开新文件关闭源文件）</p>

<pre><code class="language-vbnet">ThisWorkbook.SaveAs FileName:="D:\1.xls"
</code></pre>

<p>另存为（保留源文件不打开新文件）</p>

<pre><code class="language-vbnet">ThisWorkbook.SaveCopyAs FileName:="D:\1.xls"
</code></pre>

<h3 id="拷贝文件">拷贝文件</h3>

<pre><code class="language-vbnet">oldfile = ThisWorkBook.Path &amp; "/old.xlsx"
newfile = ThisWorkBook.Path &amp; "/new.xlsx"
FileCopy oldfile, newfile
</code></pre>

<h3 id="删除文件夹下的所有文件">删除文件夹下的所有文件</h3>

<pre><code class="language-vbnet">base = ThisWorkBook.Path &amp; "/文件夹/"
pattern = base &amp; "*.*"
file = Dir(pattern, vbReadOnly)
While file &lt;&gt; ""
    Kill base &amp; file
    file = Dir
Wend
</code></pre>

<h3 id="创建文件夹">创建文件夹</h3>

<pre><code class="language-vbnet">MkDir(directory)
</code></pre>

<h3 id="判断文件夹是否存在">判断文件夹是否存在</h3>

<p>以下为不存在即创建</p>

<pre><code class="language-vbnet">If Dir(outputDir, 16) = Empty Then
    MkDir (outputDir)
End If
</code></pre>

<h3 id="判断文件是否存在">判断文件是否存在</h3>

<p>方法 1：</p>

<pre><code class="language-vbnet">Dim fileSystemObject As Object

Set fileSystemObject = CreateObject("Scripting.FileSystemObject")

If fileSystemObject.FileExists(&lt;filepath&gt;) = True Then
    MsgBox "文件存在"
End If
</code></pre>

<p>方法 2：</p>

<pre><code class="language-vbnet">Dim file As String

file = Dir("E:\MyPictures\Pic\logo.gif")

If file &lt;&gt; "" Then
    MsgBox  "文件存在"
Endif
</code></pre>

<h2 id="格式操作">格式操作</h2>

<h3 id="设置边框与自动筛选">设置边框与自动筛选</h3>

<pre><code class="language-vbnet">Set Rng = MyWorkSheet.UsedRange
With Rng
    .Borders.LineStyle = xlContinuous
    .Borders.Weight = xlThin
    .AutoFilter
End With
</code></pre>

<h3 id="获取或者设置单元格背景色">获取或者设置单元格背景色</h3>

<pre><code class="language-vbnet">MyWorkSheet.Cells(i, j).Interior.ColorIndex
</code></pre>

<h3 id="让某表格选中的单元格变成指定颜色">让某表格选中的单元格变成指定颜色</h3>

<p>在 thisworkbook 中添加如下代码段：</p>

<pre><code class="language-vbnet">Private Sub Workbook_SheetSelectionChange(ByVal Sh As Object, ByVal Target As Range)
    If ActiveSheet.Name = "yoursheet" Then
        ActiveSheet.UsedRange.Interior.ColorIndex = 0
        Target.Interior.ColorIndex = 6
    End If
End Sub
</code></pre>

<h3 id="在单元格里回车--换行">在单元格里回车 / 换行</h3>

<p>设置单元格 Value 里使用 <code class="language-plaintext highlighter-rouge">Chr(10)</code> 和 <code class="language-plaintext highlighter-rouge">Chr(13)</code>，分别表示回车、换行。</p>

<h3 id="隐藏行">隐藏行</h3>

<pre><code class="language-vbnet">MyWorkSheet.Rows(i).Hidden = True
</code></pre>

<h3 id="单元格内容为纯文本">单元格内容为纯文本</h3>

<pre><code class="language-vbnet">sheet.Cells(m, n).NumberFormatLocal = "@"
</code></pre>

<h2 id="选择">选择</h2>

<h3 id="引用单元格--区域">引用单元格 / 区域</h3>

<pre><code class="language-vbnet">Range("A1") '表示 A1 单元格
Range("A2:D1") '表示 A2 到 D1 区域
Range("A2:D1")(3) '表示该区域里的第三个单元格
Range("D" &amp; i) 'i 为变量
Range("D3:F4,G10") '引用多个区域
Range("2:2") '引用第二行
Range("2:12") '引用第二行到第十二行
Range("D:A") '引用第 A 到 D 列
Rows(2) '引用第二行
Rows("2:4") '引用第二到四行
Columns("B")
Columns("B:D")
Range(Clee1, Cell2) '左上与右下
Range(Range1, Range2) '取最大范围
</code></pre>

<h3 id="选中单元格--区域">选中单元格 / 区域</h3>

<pre><code class="language-vbnet">Range("1:1").Select '选中第一行
</code></pre>

<h3 id="获取当前选中区域">获取当前选中区域</h3>

<pre><code class="language-vbnet">MyWorkSheet.Application.Selection
</code></pre>

<h2 id="数据结构">数据结构</h2>

<h3 id="dictionary">Dictionary</h3>

<pre><code class="language-vbnet">Dim dict
Set dict = CreateObject("Scripting.Dictionary")

' 新增，各种类型都可以，包括 Dictionary
dict.Add "hello", "world"

' 数量
dict.Count

' 删除
dict.Remove("hello")

' 判断是否存在
dict.exists("hello")

' 取值，需要先判断存在再取
dict.Item("hello")

' 修改、新增
dict.Item("hello") = "world"

' 循环
k = dict.Keys
v = dict.Items
For i = 0 to dict.count - 1
    key = k(i)
    value = v(i)
Next

' 清空
dict.RemoveAll
</code></pre>

<p>参考：<a href="http://www.cnblogs.com/zhjh256/p/6428333.html">Excel vba map/dictionary</a></p>

<h2 id="语言基础">语言基础</h2>

<h3 id="string-to-integerdouble">String to Integer、Double</h3>

<pre><code class="language-vbnet">CInt(MyWorkSheet.Cells(1,7))

CDbl(MyWorkSheet.Cells(1,7))
</code></pre>

<h3 id="字符串分割获取数组长度">字符串分割/获取数组长度</h3>

<pre><code class="language-vbnet">Dim arr() As String
arr() = Split(ws.Cells(a, b).Value, "-")
alen = UBound(arr) - LBound(arr) + 1
</code></pre>

<h3 id="判断单元格是否为空">判断单元格是否为空</h3>

<p>判断单元格的 value 是否为 ““。</p>

<h3 id="退出">退出</h3>

<p>主要使用 Exit 表达式。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Exit { Do | For | Function | Property | Select | Sub | Try | While }
</code></pre></div></div>

<p>参见 <a href="https://docs.microsoft.com/en-us/dotnet/visual-basic/language-reference/statements/exit-statement">Exit Statement (Visual Basic)</a></p>

<h2 id="参考">参考</h2>

<ul>
  <li><a href="http://software-solutions-online.com/converting-data-types/">VBA Converting Data Types</a></li>
  <li><a href="http://blog.sina.com.cn/s/blog_6d5dcf100101bkhz.html##1">excel vba判断文件是否存在</a></li>
</ul>
:ET